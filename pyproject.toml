[tool.pytest.ini_options]
  collect_ignore = ["setup.py", "benchmark/"]

[tool.black]
  exclude = '''
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | docs
    | data
    | setup.py
  )/
  '''
  include = '\.pyi?$'
  line-length = 88
  target-version = ['py37', 'py38', 'py39', 'py310']


[tool.coverage.run]
  branch = true
  source = ['tiatoolbox']
  omit = ['tests/*', 'tiatoolbox/__main__.py', '*/utils/env_detection.py']

[tool.coverage.report]
  exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
  ]
  ignore_errors = true
  omit = ['tests/*', 'tiatoolbox/__main__.py', '*/utils/env_detection.py']

[tool.isort]
  profile = "black"
  multi_line_output = 3
  line_length = 88
  filter_files = "True"
  skip = [".gitignore", "benchmarks/*"]

[build-system]
  requires = ["setuptools"]
  build-backend = "setuptools.build_meta"

[tool.distutils.bdist_wheel]
  universal = true

[tool.poetry]
name = "TIA Centre"
version = "1.4.0"
description = "test"
authors = ["TIA Centre <tialab@dcs.warwick.ac.uk>"]

[tool.poetry_bumpversion.file."tiatoolbox/__init__.py"]
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'


[[tool.poetry_bumpversion.replacements]]
files = ["setup.py"]
search = 'version="{current_version}"'
replace = 'version="{new_version}"'

[[tool.poetry_bumpversion.replacements]]
files = ["CITATION.cff"]
search = 'version: {current_version}  # TIAToolbox version'
replace = 'version: {new_version}  # TIAToolbox version'

[[tool.poetry_bumpversion.replacements]]
files = [".github/workflows/docker-publish.yml"]
search = 'TOOLBOX_VER: {current_version}'
replace = 'TOOLBOX_VER: {new_version}'
