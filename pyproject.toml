[tool.pytest.ini_options]
  collect_ignore = ["setup.py", "benchmark/"]

[tool.black]
  exclude = '''
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | docs
    | data
    | setup.py
  )/
  '''
  include = '\.pyi?$'
  line-length = 88
  target-version = ['py37', 'py38', 'py39', 'py310']


[tool.coverage.run]
  branch = true
  source = ['tiatoolbox']
  omit = ['tests/*', 'tiatoolbox/__main__.py', '*/utils/env_detection.py']

[tool.coverage.report]
  exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
  ]
  ignore_errors = true
  omit = ['tests/*', 'tiatoolbox/__main__.py', '*/utils/env_detection.py']

[tool.isort]
  profile = "black"
  multi_line_output = 3
  line_length = 88
  filter_files = "True"
  skip = [".gitignore", "benchmarks/*"]

[build-system]
  requires = ["setuptools"]
  build-backend = "setuptools.build_meta"

[tool.distutils.bdist_wheel]
  universal = true

[tool.ruff]
select = [
  "A",     # flake8-builtins
  "B",     # flake8-bugbear
  "D",     # pydocstyle, need to enable for docstrings check.
  "E",     # pycodestyle - Error
  "F",     # pyflakes
  "G",     # flake8-logging-format
  "N",     # pep8-naming
  # "S",     # flake8-bandit
  "W",     # pycodestyle - Warning
  "C4",    # flake8-comprehensions
  "FA",    # flake8-future-annotations
  "EM",    # flake8-errmsg
  "PT",    # flake8-pytest-style
  "UP",    # pyupgrade
  "C90",   # mccabe
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  # "ANN",   # flake8-annotations
  "BLE",   # flake8-blind-except
  "COM",   # flake8-commas
  "DTZ",   # flake8-datetimez
  "ERA",   # eradicate
  # "FBT",   # flake8-boolean-trap
  "FIX",   # flake8-fixme
  "ICN",   # flake8-import-conventions
  "INP",   # flake8-no-pep420
  "ISC",   # flake8-implicit-str-concat
  "PIE",   # flake8-pie
  "RET",   # flake8-return
  "SIM",   # flake8-simplify
  "YTT",   # flake8-2020
  "ASYNC", # flake8-async
]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".eggs",
    ".git",
    ".ruff_cache",
    ".svn",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "venv",
]

# Ignore `F401` (import violations) in all `__init__.py` files.
per-file-ignores = {"__init__.py" = ["F401"]}

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Minimum Python version 3.8.
target-version = "py38"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 14

# need to enable for docstrings check.
 [tool.ruff.pydocstyle]
 # Use Google-style docstrings.
 convention = "google"
