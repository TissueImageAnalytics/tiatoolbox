openapi: 3.0.0
info:
  title: tiatoolbox tileserver API
  version: 1.0.0
  description: A simple API to get tiles from a WSI, together with rendered
    annotations. Provides endpoints to get tiles from different layers,
    specify the path to the resource to be displayed, and control aspects of the
    AnnotationRenderer used to render the annotations.

paths:
  /tileserver/layer/{layer}/{session_id}/zoomify/TileGroup{tile_group}/{z}-{x}-{y}@{res}x.jpg:
    get:
      summary: Get zoomify tiles for a layer
      parameters:
        - in: path
          name: layer
          description: Name of the layer
          required: true
          schema:
            type: string
        - in: path
          name: session_id
          description: Name of the session_id
          required: true
          schema:
            type: string
        - in: path
          name: tile_group
          description: Number of the TileGroup
          required: true
          schema:
            type: integer
        - in: path
          name: z
          description: Zoom level
          required: true
          schema:
            type: integer
        - in: path
          name: x
          description: X coordinate of the tile
          required: true
          schema:
            type: integer
        - in: path
          name: y
          description: Y coordinate of the tile
          required: true
          schema:
            type: integer
        - in: path
          name: res
          description: Resolution of the tile (1 or 2x)
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Image returned successfully
          content:
            image/webp:
              schema:
                type: image/webp

  /:
    get:
      summary: Get index page
      description: This endpoint serves a web page with a simple slide viewer
      responses:
        '200':
          description: The index page.
          content:
            text/html:
              schema:
                type: string

  /tileserver/session_id:
    get:
      summary: Get session_id information
      description: Set up new session_id identifier to disambiguate different sessions
      responses:
        '200':
          description: Successful response
          headers:
          Set-Cookie:
            schema:
              type: string
            description: The 'session_id' cookie containing the session_id identifier.

  /tileserver/color_prop/{prop}:
    put:
      summary: Update the property used to determine the colors of rendered annotations
      parameters:
        - in: path
          name: prop
          description: Name of the property
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response

  /tileserver/slide/{slide_path}:
    put:
      summary: change the base slide. All overlays will be removed.
      parameters:
        - in: path
          name: slide_path
          description: Path to the slide in url safe form
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response

  /tileserver/cmap/{cmap}:
    put:
      summary: Change colormap for annotation layer
      parameters:
        - in: path
          name: cmap
          description: Name of the colormap, should be a matplotlib colormap
            or a dict string
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response

  /tileserver/load_annotations/{file_path}/{model_mpp}:
    put:
      summary: Load annotations for a slide
      parameters:
        - in: path
          name: file_path
          description: Path to the annotation file in url safe form
            can be a .db, .dat or .geojson file
          required: true
          schema:
            type: string
        - in: path
          name: model_mpp
          description: Model microns per pixel, used if annotations are output
            of a model not at baseline
          required: true
          schema:
            type: number
            format: float
      responses:
        '200':
          description: jsonified list of types of loaded annotations
          content:
            application/json:

  /tileserver/overlay/{overlay_path}:
    put:
      summary: Change overlay for a slide
      description: This endpoint changes the overlay. If the path points to some annotations, the current overlay is replaced with the new one. If the path points to an image, it is added as a new layer.
      parameters:
        - in: path
          name: overlay_path
          description: url safe path to the new overlay image file
          required: true
          schema:
            type: string
      responses:
        '200':
          description: jsonified list of types present in the overlay, if any
          content:
            application/json:

  /tileserver/commit/{save_path}:
    get:
      summary: Commit database changes
      parameters:
        - in: path
          name: save_path
          description: Url safe path to save the database changes
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response

  /tileserver/renderer/{prop}/{val}:
    put:
      summary: Update annotation renderer properties
      parameters:
        - in: path
          name: prop
          description: Property to update
          required: true
          schema:
            type: string
        - in: path
          name: val
          description: New value for the property
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response

  /tileserver/secondary_cmap/{type_id}/{prop}/{cmap}:
    put:
      summary: Change secondary color map for a property type
      parameters:
        - in: path
          name: type_id
          description: The type for which you want to override the primary
            color map
          required: true
          schema:
            type: string
        - in: path
          name: prop
          description: Property to use to color annotations of the chose type
          required: true
          schema:
            type: string
        - in: path
          name: cmap
          description: Color map to use for the property
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response

  /tileserver/prop_names/{ann_type}:
    get:
      summary: Get all the properties of the annotations in the store
      description: This endpoint retrieves all the property names in the annotations in the store of the specified type.
      parameters:
        - name: ann_type
          in: path
          required: true
          description: The annotation type to filter properties by, or "all" for all types.
          schema:
            type: string
      responses:
        '200':
          description: List of annotation properties.
          content:
            application/json:
              schema:
                type: array

  /tileserver/prop_values/{prop}/{ann_type}:
    get:
      summary: Get a list of available values for a property
      parameters:
        - in: path
          name: prop
          description: Name of the property to retrieve values for
          required: true
          schema:
            type: string
        - in: path
          name: type
          description: Name of a type to retrieve property values for.
            if all, prop values over all annotations will be returned
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      type: string

  /tileserver/reset/{session_id}:
    put:
      summary: Remove no longer needed objects if session is closed
      parameters:
        - in: path
          name: session_id
          description: Name of the session_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
